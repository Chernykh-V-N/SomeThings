const rm = require('rimraf')
const ora = require('ora')
const path = require('path')
const chalk = require('chalk')
const webpack = require('webpack')
const merge = require('webpack-merge')
const loadProjectConfig = require('../util/loadProjectConfig')
const getConfig = require('../util/getConfig')

process.PROJECT_CONFIG = loadProjectConfig()

module.exports = function run(command, mode) {
  if (command === 'dev') {

    require('./devServer')

  } else if (command === 'build') {

    var spinner = ora(`building for ${mode}...\n`)

    try {
      var webpackConfig = require(`../config/${mode}`)
    } catch (e) {
      var webpackConfig = require('../config/production')
    }

    spinner.start()

    if (process.PROJECT_CONFIG.webpackConfig) {
      webpackConfig = merge(webpackConfig, process.PROJECT_CONFIG.webpackConfig)
    }

    rm(path.join(getConfig('assetsRoot'), getConfig('assetsSubDirectory')), err => {

      if (err) throw err

      webpack(webpackConfig, function (err, stats) {

        spinner.stop()

        if (err) throw err

        process.stdout.write(stats.toString({
          colors: true,
          modules: false,
          children: false,
          chunks: false,
          chunkModules: false
        }) + '\n\n')

        console.log(chalk.cyan('  Build complete.\n'))
        console.log(chalk.yellow(
          '  Tip: built files are meant to be served over an HTTP server.\n' +
          '  Opening index.html over file:// won\'t work.\n'
        ))
      })
    })
  }
}