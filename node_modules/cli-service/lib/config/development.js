const webpack = require('webpack')
const merge = require('webpack-merge')
const HtmlWebpackPlugin = require('html-webpack-plugin')
const FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin')
const ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin')
const utils = require('./utils')
const getConfig = require('../util/getConfig')
const resolveProject = require('../util/resolveProject')
const commonWebpackConfig = require('./common')

module.exports = merge(commonWebpackConfig, {
  module: {
    rules: [
      ...utils.styleLoaders({
        sourceMap: getConfig('sourceMap')
      }),
      {
        test: /\.tsx?$/,
        loader: 'ts-loader',
        exclude: /node_modules/,
        options: {
          appendTsSuffixTo: [/\.vue$/]
        }
      },
      {
        test: /\.tsx?$/,
        exclude: /node_modules/,
        enforce: 'pre',
        loader: 'tslint-loader',
        include: [resolveProject('src')],
        options: {
          configFile: resolveProject('tslint.json'),
          formatter: 'codeFrame',
          formattersDirectory: resolveProject('node_modules/tslint/lib/formatters/')
        }
      }
    ]
  },
  // cheap-module-eval-source-map is faster for development
  devtool: '#cheap-module-eval-source-map',
  plugins: [
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV)
    }),
    // https://github.com/glenjamin/webpack-hot-middleware#installation--usage
    new webpack.HotModuleReplacementPlugin(),
    new webpack.NoEmitOnErrorsPlugin(),
    // https://github.com/ampedandwired/html-webpack-plugin
    new HtmlWebpackPlugin({
      filename: getConfig('indexOutput'),
      template: getConfig('indexTemplate'),
      title: getConfig('title'),
      inject: true
    }),
    new FriendlyErrorsPlugin(),
    new ForkTsCheckerWebpackPlugin({
      tslint: true,
      watch: resolveProject('src'),
      vue: true,
      tsconfig: resolveProject('tsconfig.json')
    })
  ]
})
